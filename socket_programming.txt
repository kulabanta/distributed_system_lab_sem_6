socket programming functions

1.socket(): creation of socket
	int sockfd = socket(int domain,int type,int protocol)
	
	domain = address family (AF_INET) IPV4
	type = SOCK_STREAM (TCP protocol) or	
		SOCK_DCRAM (UDP protocol)
	protocol = 0 (default fot tcp protocol)

2.bind() : after socket is created it reamains in address family but it has no address assigned to it
		
	   int bind(int sockfd,const struct sockaddr *addr , socklen_t addrlen)
		
	   bind assigns the address specified by addr to the socket reffered by sockfd

	   addrlen = length of address in bytes specified by addr

	   struct sockaddr{
		sa_family_t sa_family;
		char sa_data[14];
	   }

	  bind function returns 0 if execution successful else return -1

3.listen() :
	  
	int listen(int sockfd , int backlog)
	
	the function listen for a connection in a socket
	
	backlog = no of connections a system can handle at a single time

4.accept() :
	
	newsockfd = accept(sockfd,(struct sockaddr * ) &addr,&addrlen)
		
	returns a file descripter

	it waits for the connection() functions from client

5.connect(): client side function 
	
	int connect(int sockfd ,const struct sockaddr *addr,socklen_t addrlen)

	it doesnot return anything

6.read() : 
	int read(newsockfd,buffer,buffer_size);

7.write():
	int write(newsockfd,buffer,buffer_size);
	
	buffer = message to be passed
	buffer_size = string size

8.close() :
	closes the connection